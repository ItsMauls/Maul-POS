FROM node:18-alpine as builder

# Install OpenSSL and other dependencies
RUN apk add --no-cache libc6-compat openssl postgresql-client

WORKDIR /app/apps/database-service

# Copy package files
COPY apps/database-service/package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the database service files
COPY apps/database-service .

# Generate Prisma client
RUN npx prisma generate

# Production stage
FROM node:18-alpine

# Install OpenSSL and other dependencies
RUN apk add --no-cache libc6-compat openssl postgresql-client

WORKDIR /app/apps/database-service

# Copy package files
COPY apps/database-service/package*.json ./

# Install production dependencies only
RUN npm install --production

# Copy built files from builder
COPY --from=builder /app/apps/database-service/node_modules/.prisma ./node_modules/.prisma

# Create a startup script
RUN echo '#!/bin/sh\n\
echo "Waiting for PostgreSQL to be ready..."\n\
until PGPASSWORD=postgres psql -h postgres -U postgres -c "\\q"; do\n\
  echo "PostgreSQL is unavailable - sleeping"\n\
  sleep 2\n\
done\n\
\n\
echo "PostgreSQL is up - creating database if needed"\n\
PGPASSWORD=postgres psql -h postgres -U postgres -c "CREATE DATABASE db_apotek;" || echo "Database already exists"\n\
\n\
echo "Running Prisma migrations..."\n\
npx prisma migrate deploy\n\
\n\
echo "Database service is running..."\n\
echo "Prisma client is available for other services"\n\
tail -f /dev/null' > startup.sh && chmod +x startup.sh

# Use the startup script
CMD ["sh", "./startup.sh"]

EXPOSE 3004 