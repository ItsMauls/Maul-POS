
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  phone_number: 'phone_number',
  username: 'username',
  firstName: 'firstName',
  lastName: 'lastName',
  password: 'password',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  bio: 'bio',
  avatar: 'avatar',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MKategoriScalarFieldEnum = {
  id_kategori: 'id_kategori',
  nm_kategori: 'nm_kategori',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MSatuanScalarFieldEnum = {
  id_satuan: 'id_satuan',
  nm_satuan: 'nm_satuan',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReturPenjualanScalarFieldEnum = {
  id: 'id',
  id_transaksi: 'id_transaksi',
  kd_brgdg: 'kd_brgdg',
  detail: 'detail',
  qty: 'qty',
  harga: 'harga',
  discount: 'discount',
  ppn: 'ppn',
  subtotal_harga: 'subtotal_harga',
  subtotal_discount: 'subtotal_discount',
  subtotal_ppn: 'subtotal_ppn',
  no_batch: 'no_batch',
  tgl_batch: 'tgl_batch',
  id_hretur_cabang: 'id_hretur_cabang',
  detail_retur_cabang: 'detail_retur_cabang',
  status_retur: 'status_retur',
  nominal_retur: 'nominal_retur',
  hpp: 'hpp',
  total_hpp: 'total_hpp',
  wso2transfer: 'wso2transfer',
  id_htransb: 'id_htransb',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MCabangScalarFieldEnum = {
  kd_cab: 'kd_cab',
  nm_cab: 'nm_cab',
  alamat: 'alamat',
  no_telepon: 'no_telepon',
  no_hp: 'no_hp',
  email: 'email',
  created_at: 'created_at',
  deleted_status: 'deleted_status',
  deleted_at: 'deleted_at',
  id_tipe_cabang: 'id_tipe_cabang',
  id_area: 'id_area',
  shift: 'shift',
  id_instansi: 'id_instansi',
  bpjs: 'bpjs',
  status_connection: 'status_connection',
  offline: 'offline',
  proses: 'proses',
  tanggal_update: 'tanggal_update',
  time_off: 'time_off'
};

exports.Prisma.MPabrikScalarFieldEnum = {
  id: 'id',
  nm_pabrik: 'nm_pabrik',
  alamat: 'alamat',
  no_telepon: 'no_telepon',
  email: 'email',
  no_npwp: 'no_npwp',
  nm_npwp: 'nm_npwp',
  alamat_npwp: 'alamat_npwp',
  created_at: 'created_at',
  deleted_status: 'deleted_status',
  deleted_at: 'deleted_at',
  min_bulan_ed: 'min_bulan_ed',
  informasi_retur: 'informasi_retur',
  prf_telp: 'prf_telp'
};

exports.Prisma.MKLProdukScalarFieldEnum = {
  id_kl: 'id_kl',
  nm_kl: 'nm_kl',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MRackPusdisScalarFieldEnum = {
  id_dept_pusdis: 'id_dept_pusdis',
  nm_dept: 'nm_dept',
  id_kategori: 'id_kategori',
  parent_id: 'parent_id',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at',
  deleted_by: 'deleted_by',
  is_deleted: 'is_deleted',
  nm_kategori: 'nm_kategori'
};

exports.Prisma.TMainStockScalarFieldEnum = {
  kd_brgdg: 'kd_brgdg',
  nm_brgdg: 'nm_brgdg',
  id_dept: 'id_dept',
  isi: 'isi',
  id_satuan: 'id_satuan',
  strip: 'strip',
  mark_up: 'mark_up',
  hb_netto: 'hb_netto',
  hb_gross: 'hb_gross',
  hj_ecer: 'hj_ecer',
  hj_bbs: 'hj_bbs',
  id_kategori: 'id_kategori',
  id_pabrik: 'id_pabrik',
  barcode: 'barcode',
  created_at: 'created_at',
  created_by: 'created_by',
  deleted_status: 'deleted_status',
  deleted_at: 'deleted_at',
  hpp: 'hpp',
  q_bbs: 'q_bbs',
  tgl_new_product: 'tgl_new_product',
  konsinyasi: 'konsinyasi',
  halodoc: 'halodoc',
  bpjs: 'bpjs',
  informasi_po: 'informasi_po',
  informasi_tanggal_ed_po: 'informasi_tanggal_ed_po',
  aturan_pakai: 'aturan_pakai',
  komposisi: 'komposisi',
  indikasi: 'indikasi',
  dosis: 'dosis',
  trading_term: 'trading_term',
  id_kl: 'id_kl',
  status: 'status',
  moq: 'moq',
  min_bulan_ed: 'min_bulan_ed',
  informasi_return: 'informasi_return',
  barcode_big: 'barcode_big',
  hb_net: 'hb_net',
  mark_up_purchasing: 'mark_up_purchasing',
  hna: 'hna',
  hj_masiva: 'hj_masiva',
  sup1: 'sup1',
  q_temp_out: 'q_temp_out',
  q_exp: 'q_exp',
  disc1: 'disc1',
  q_akhir: 'q_akhir',
  produksi: 'produksi',
  het: 'het',
  berat: 'berat',
  nie: 'nie',
  tgl_berlaku_nie: 'tgl_berlaku_nie',
  file_nie: 'file_nie',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  id_brand: 'id_brand',
  deskripsi: 'deskripsi',
  wso2transfer: 'wso2transfer',
  is_updated: 'is_updated',
  kd_cab: 'kd_cab',
  id_dept_pusdis: 'id_dept_pusdis'
};

exports.Prisma.TransaksiScalarFieldEnum = {
  id: 'id',
  id_pelanggan: 'id_pelanggan',
  id_dokter: 'id_dokter',
  kd_cab: 'kd_cab',
  sales_pelayan: 'sales_pelayan',
  jenis_penjualan: 'jenis_penjualan',
  invoice_eksternal: 'invoice_eksternal',
  catatan: 'catatan',
  total_harga: 'total_harga',
  total_disc: 'total_disc',
  total_sc_misc: 'total_sc_misc',
  total_promo: 'total_promo',
  total_up: 'total_up',
  no_voucher: 'no_voucher',
  interval_transaksi: 'interval_transaksi',
  buffer_transaksi: 'buffer_transaksi',
  created_at: 'created_at',
  updated_at: 'updated_at',
  receipt: 'receipt'
};

exports.Prisma.TransaksiDetailScalarFieldEnum = {
  id: 'id',
  id_transaksi: 'id_transaksi',
  kd_brgdg: 'kd_brgdg',
  jenis: 'jenis',
  harga: 'harga',
  qty: 'qty',
  subjumlah: 'subjumlah',
  disc: 'disc',
  sc_misc: 'sc_misc',
  promo: 'promo',
  disc_promo: 'disc_promo',
  up: 'up',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AntrianScalarFieldEnum = {
  id_antrian: 'id_antrian',
  id_trans: 'id_trans',
  id_pelanggan: 'id_pelanggan',
  kd_cab: 'kd_cab',
  no_antrian: 'no_antrian',
  type_trans: 'type_trans',
  mulai: 'mulai',
  selesai: 'selesai',
  timer: 'timer',
  status_proses: 'status_proses',
  user_mulai: 'user_mulai',
  user_selesai: 'user_selesai',
  tgl_update: 'tgl_update',
  status: 'status',
  status_antrian: 'status_antrian',
  tanggal: 'tanggal',
  status_racik: 'status_racik'
};

exports.Prisma.PelangganScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  alamat: 'alamat',
  no_telp: 'no_telp',
  usia: 'usia',
  instansi: 'instansi',
  korp: 'korp',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DokterScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  alamat: 'alamat',
  spesialisasi: 'spesialisasi',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PromoScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  deskripsi: 'deskripsi',
  diskon: 'diskon',
  tanggal_awal: 'tanggal_awal',
  tanggal_akhir: 'tanggal_akhir',
  jam_awal_promo: 'jam_awal_promo',
  jam_akhir_promo: 'jam_akhir_promo',
  no_promo: 'no_promo',
  jenis_promo: 'jenis_promo',
  min_pembelian: 'min_pembelian',
  max_diskon: 'max_diskon',
  kuantitas_beli: 'kuantitas_beli',
  kuantitas_gratis: 'kuantitas_gratis',
  deleted_at: 'deleted_at',
  tmainstockId: 'tmainstockId'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  amount: 'amount',
  paymentType: 'paymentType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CashPaymentScalarFieldEnum = {
  id: 'id',
  paymentId: 'paymentId',
  amount: 'amount'
};

exports.Prisma.CardPaymentScalarFieldEnum = {
  id: 'id',
  paymentId: 'paymentId',
  amount: 'amount',
  accountNumber: 'accountNumber',
  bank: 'bank',
  edcMachine: 'edcMachine',
  cardType: 'cardType',
  cardBrand: 'cardBrand'
};

exports.Prisma.KeranjangScalarFieldEnum = {
  id: 'id',
  no_bon: 'no_bon',
  items: 'items',
  pelanggan: 'pelanggan',
  dokter: 'dokter',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR'
};

exports.PaymentType = exports.$Enums.PaymentType = {
  CASH: 'CASH',
  DEBIT: 'DEBIT',
  CREDIT: 'CREDIT'
};

exports.CardType = exports.$Enums.CardType = {
  DEBIT: 'DEBIT',
  CREDIT: 'CREDIT'
};

exports.Prisma.ModelName = {
  User: 'User',
  Profile: 'Profile',
  MKategori: 'MKategori',
  MSatuan: 'MSatuan',
  ReturPenjualan: 'ReturPenjualan',
  MCabang: 'MCabang',
  MPabrik: 'MPabrik',
  MKLProduk: 'MKLProduk',
  MRackPusdis: 'MRackPusdis',
  TMainStock: 'TMainStock',
  Transaksi: 'Transaksi',
  TransaksiDetail: 'TransaksiDetail',
  Antrian: 'Antrian',
  Pelanggan: 'Pelanggan',
  Dokter: 'Dokter',
  Promo: 'Promo',
  Payment: 'Payment',
  CashPayment: 'CashPayment',
  CardPayment: 'CardPayment',
  Keranjang: 'Keranjang'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
