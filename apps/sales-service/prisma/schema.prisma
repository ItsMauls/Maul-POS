datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

model Kategori {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  description String?
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  Mainstock   Mainstock[]
}

model Mainstock {
  kd_brgdg                Int               @id @default(autoincrement())
  nm_brgdg                String
  id_dept                 Int?
  isi                     Int?  
  strip                   Int
  mark_up                 Float?
  hb_netto                Float?
  hb_gross                Float?
  hj_ecer                 Float?
  hj_bbs                  Float?
  id_kategori             Int?
  id_pabrik               Int?
  barcode                 String?
  created_at              DateTime          @default(now())
  created_by              String?
  deleted_status          Boolean           @default(false)
  deleted_at              DateTime?
  hpp                     Float?
  q_bbs                   Int?
  tgl_new_product         DateTime?
  konsinyasi              Boolean?
  halodoc                 Boolean?
  bpjs                    Boolean?
  informasi_po            String?
  informasi_tanggal_ed_po DateTime?
  aturan_pakai            String?
  komposisi               String?
  indikasi                String?
  dosis                   String?
  trading_term            String?
  id_kl                   Int?
  status                  Int?
  moq                     Int?
  min_bulan_ed            Int?
  informasi_return        String?
  barcode_big             String?
  hb_net                  Float?
  mark_up_purchasing      Float?
  hna                     Float?
  hj_masiva               Float?
  sup1                    String?
  q_temp_out              Int?
  q_exp                   Int?
  disc1                   Float?
  q_akhir                 Int?
  produksi                String?
  het                     Float?
  berat                   Float?
  nie                     String?
  tgl_berlaku_nie         DateTime?
  file_nie                String?
  updated_at              DateTime?
  updated_by              String?
  id_brand                Int?
  deskripsi               String?
  wso2transfer            Boolean?
  is_updated              Boolean?
  kategori                Kategori?          @relation(fields: [id_kategori], references: [id])
  TransaksiDetail         TransaksiDetail[]
  ReturPenjualan          ReturPenjualan[]
  cabang                 Cabang             @relation(fields: [kd_cab], references: [kd_cab])
  kd_cab                 String
  promos                  Promo[]            @relation("MainstockPromos")
}

model Pelanggan {
  id         Int         @id @default(autoincrement())
  nama       String?
  alamat     String?
  no_telp    String?
  usia       Int?
  instansi   String?
  korp       String?
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  Transaksi  Transaksi[]
  Antrian    Antrian[]
}

model Dokter {
  id           Int         @id @default(autoincrement())
  nama         String?
  alamat       String?
  spesialisasi String?
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  Transaksi    Transaksi[]
}

model Transaksi {
  id                 Int               @id @default(autoincrement())
  pelanggan          Pelanggan         @relation(fields: [id_pelanggan], references: [id])
  id_pelanggan       Int
  dokter             Dokter            @relation(fields: [id_dokter], references: [id])
  id_dokter          Int
  sales_pelayan      String
  jenis_penjualan    String
  invoice_eksternal  String?
  catatan            String?
  total_harga        Decimal           @db.Decimal(12, 2)
  total_disc         Decimal           @db.Decimal(12, 2)
  total_sc_misc      Decimal           @db.Decimal(12, 2)
  total_promo        Decimal           @db.Decimal(12, 2)
  total_up           Decimal           @db.Decimal(12, 2)
  no_voucher         String?
  interval_transaksi Int?
  buffer_transaksi   Int?
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt
  TransaksiDetail    TransaksiDetail[]
  ReturPenjualan     ReturPenjualan[]
  cabang             Cabang            @relation(fields: [kd_cab], references: [kd_cab])
  kd_cab             String
  antrian            Antrian[]
  receipt            String?           // Add this line to store the base64-encoded PDF content  
}

model TransaksiDetail {
  id           Int       @id @default(autoincrement())
  transaksi    Transaksi @relation(fields: [id_transaksi], references: [id])
  id_transaksi Int
  mainstock    Mainstock @relation(fields: [kd_brgdg], references: [kd_brgdg])
  kd_brgdg     Int
  jenis        String // R(resep) atau RC(racikan)
  harga        Decimal   @db.Decimal(10, 2)
  qty          Int
  subjumlah    Decimal   @db.Decimal(12, 2)
  disc         Decimal   @db.Decimal(10, 2)
  sc_misc      Decimal   @db.Decimal(10, 2)
  promo        Decimal   @db.Decimal(10, 2) // Promotion amount
  disc_promo   Decimal   @db.Decimal(10, 2) // Discount amount
  up           Decimal   @db.Decimal(10, 2)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  promos       Promo[]   @relation("TransaksiDetailPromos")
}

model ReturPenjualan {
  id                  Int       @id @default(autoincrement())
  transaksi           Transaksi @relation(fields: [id_transaksi], references: [id])
  id_transaksi        Int
  mainstock           Mainstock @relation(fields: [kd_brgdg], references: [kd_brgdg])
  kd_brgdg            Int
  detail              String?
  qty                 Int
  harga               Decimal   @db.Decimal(10, 2)
  discount            Decimal   @db.Decimal(10, 2)
  ppn                 Decimal   @db.Decimal(10, 2)
  subtotal_harga      Decimal   @db.Decimal(12, 2)
  subtotal_discount   Decimal   @db.Decimal(12, 2)
  subtotal_ppn        Decimal   @db.Decimal(12, 2)
  no_batch            String?
  tgl_batch           DateTime?
  id_hretur_cabang    Int?
  detail_retur_cabang String?
  status_retur        String?
  nominal_retur       Decimal?  @db.Decimal(12, 2)
  hpp                 Decimal   @db.Decimal(10, 2)
  total_hpp           Decimal   @db.Decimal(12, 2)
  wso2transfer        Boolean
  id_htransb          Int
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
}

model Cabang {
  id          Int         @id @default(autoincrement())
  kd_cab      String      @unique
  nama_cabang String
  alamat      String
  area        String
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  Transaksi   Transaksi[]
  Mainstock   Mainstock[]
  antrian     Antrian[]
}

model Antrian {
  id_antrian      Int    @id @default(autoincrement())
  id_trans        Int?
  no_antrian      Int?
  type_trans      String?   
  mulai          String?   
  selesai        String?   
  timer          String?   
  status_proses  Int?  
  user_mulai     String?   
  user_selesai   String?   
  tgl_update      DateTime?
  status          String?   
  status_antrian  Boolean?
  tanggal         DateTime?
  status_racik    Boolean?
  kd_cab          String
  id_pelanggan    Int?

  // Relationships
  transaksi       Transaksi? @relation(fields: [id_trans], references: [id])
  cabang          Cabang     @relation(fields: [kd_cab], references: [kd_cab])
  pelanggan       Pelanggan? @relation(fields: [id_pelanggan], references: [id])
}

model Promo {
  id              Int       @id @default(autoincrement())
  nama            String
  deskripsi       String?
  diskon          Float
  tanggal_awal    DateTime
  tanggal_akhir   DateTime
  jam_awal_promo  String
  jam_akhir_promo String
  no_promo        String
  jenis_promo     String
  mainstock       Mainstock @relation("MainstockPromos", fields: [mainstockId], references: [kd_brgdg])
  mainstockId     Int

  min_pembelian   Int?
  max_diskon      Float?
  kuantitas_beli  Int?
  kuantitas_gratis Int?

  deleted_at      DateTime?

  TransaksiDetail TransaksiDetail[] @relation("TransaksiDetailPromos")
}
