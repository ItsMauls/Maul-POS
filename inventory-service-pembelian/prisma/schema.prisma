datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Supplier {
  id                   Int                    @id @default(autoincrement())
  kd_brgdg             String                 @unique
  nama                 String                 @unique
  kd_cab               String                 @unique
  created_at           DateTime               @default(now())
  created_by           String
  updated_at           DateTime               @updatedAt
  updated_by           String
  deleted_status       Boolean                @default(false)
  deleted_at           DateTime?
  deleted_by           String?
  penerimaan_cabang    PenerimaanCabang[]
  penerimaan_supplier  PenerimaanSupplier[]
  SuratPesanan         SuratPesanan[]
  FakturPembelian      FakturPembelian[]
}

model PenerimaanCabang {
  id            Int      @id @default(autoincrement())
  idpo          String
  kd_cab        String
  kd_brgdg      String
  psn           Int
  isi           Int
  qty           Int
  hna           Decimal  @db.Decimal(10, 2)
  disc          Decimal  @db.Decimal(5, 2)
  hna_min_disc  Decimal  @db.Decimal(10, 2)
  ppn           Decimal  @db.Decimal(5, 2)
  hna_plus_ppn  Decimal  @db.Decimal(10, 2)
  total         Decimal  @db.Decimal(12, 2)
  no_batch      String
  tgl_expired   DateTime
  qty_bonus     Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  supplier      Supplier @relation(fields: [kd_cab], references: [kd_cab])
}

model PenerimaanSupplier {
  id                Int       @id @default(autoincrement())
  id_po             String
  detail            String?
  tgl_po            DateTime
  kd_brgdg          String
  nm_brgdg          String
  id_dept           Int
  isi_pak           Int
  pesanan_outlet    Int
  pesan_sup         Int
  ket               String?
  no_sup            String
  nm_sup            String
  disc              Decimal   @db.Decimal(10, 2)
  no_sp             String
  tgl_sp            DateTime
  user_id_pesan     Int
  tgl_input_pesan   DateTime
  datang            Int
  tgl_datang        DateTime?
  user_id_datang    Int?
  tgl_input_datang  DateTime?
  status            Int
  id_htransb        String
  cito              Boolean
  q_exp             Int
  pesan_box         Int
  max_pesan         Int
  q_retur           Int
  ket_retur         String?
  panggil           Boolean
  bidding           Boolean
  jenis_pesanan     String
  disc_off          Decimal   @db.Decimal(10, 2)
  tot_disc_off      Decimal   @db.Decimal(10, 2)
  tot_disc_off_fin  Decimal   @db.Decimal(10, 2)
  is_deleted        Boolean   @default(false)
  pernah_bidding    Boolean
  wso2transfer      Boolean
  sudah_terima      Boolean
  hb_gross_erp      Decimal   @db.Decimal(10, 2)
  hb_gross_sql      Decimal   @db.Decimal(10, 2)
  value_sql         Decimal   @db.Decimal(10, 2)
  value_erp         Decimal   @db.Decimal(10, 2)
  user_id           Int
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  
  supplier          Supplier  @relation(fields: [kd_brgdg], references: [kd_brgdg])
}

model SuratPesanan {
  id               Int          @id @default(autoincrement())
  nomor_sp         String       @unique
  tgl_pr           DateTime
  jns_trans        String
  supplier         Supplier     @relation(fields: [id_supplier], references: [id])
  id_supplier      Int
  total            Decimal      @db.Decimal(12, 2)
  keterangan       String?
  userId           Int
  status_approval  String
  tgl_approve      DateTime?
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt
  Penerimaan       Penerimaan[]
}

model Penerimaan {
  id               Int          @id @default(autoincrement())
  suratPesanan     SuratPesanan @relation(fields: [nomor_sp], references: [nomor_sp])
  nomor_sp         String
  nomor_preorder   String
  tgl_preorder     DateTime
  scan             String?
  jns_trans        String
  no_reff          String
  tgl_reff         DateTime
  nama_supplier    String
  total            Decimal      @db.Decimal(12, 2)
  keterangan       String?
  tanggal_jt       DateTime
  userId           Int
  status_approval  String
  tgl_approve      DateTime?
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt
}

model FakturPembelian {
  id               Int       @id @default(autoincrement())
  nomor_pembelian  String    @unique
  jns_trans        String
  no_reff          String
  tgl_reff         DateTime
  supplier         Supplier  @relation(fields: [id_supplier], references: [id])
  id_supplier      Int
  sub_total        Decimal   @db.Decimal(12, 2)
  total            Decimal   @db.Decimal(12, 2)
  keterangan       String?
  tanggal_jt       DateTime
  userId           Int
  status_bayar     String
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
}

model ETicket {
  id               Int       @id @default(autoincrement())
  no_lpb           String    @unique
  jenis_transaksi  String
  tgl_lpb          DateTime
  polos            Boolean
  no_reff          String
  total            Decimal   @db.Decimal(12, 2)
  keterangan       String?
  userId           Int
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
}